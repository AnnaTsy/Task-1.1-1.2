var over = [
 [-0.92453, -0.99625],
[-0.91981, -0.92509],
[-0.91981, -0.83521],
[-0.91981, -0.74157],
[-0.92925, -0.63296],
[-0.93396, -0.53184],
[-0.92453, -0.46067],
[-0.89151, -0.35955],
[-0.85377, -0.2809],
[-0.76887, -0.22097],
[-0.75, -0.17978],
[-0.6934, -0.16105],
[-0.62736, -0.1573],
[-0.52358, -0.13109],
[-0.48585, -0.10112],
[-0.45283, -0.05618],
[-0.48585, -0.014981],
[-0.5, 0.05618],
[-0.47642, 0.11236],
[-0.49057, 0.16105],
[-0.45283, 0.20974],
[-0.41509, 0.22846],
[-0.44811, 0.25843],
[-0.47642, 0.31086],
[-0.4434, 0.34457],
[-0.37736, 0.37828],
[-0.31132, 0.43071],
[-0.29245, 0.46816],
[-0.31132, 0.53933],
[-0.29245, 0.58427],
[-0.24057, 0.61423],
[-0.19811, 0.64045],
[-0.19811, 0.68539],
[-0.14151, 0.72659],
[-0.12264, 0.78277],
[-0.080189, 0.81648],
[0.023585, 0.82772],
[0.12264, 0.85019],
[0.22642, 0.87266],
[0.30189, 0.87266],
[0.36792, 0.82022],
[0.39623, 0.79026],
[0.44811, 0.79026],
[0.48585, 0.76779],
[0.53774, 0.7191],
[0.58491, 0.6779],
[0.63679, 0.61049],
[0.66038, 0.54682],
[0.66509, 0.45318],
[0.66981, 0.37828],
[0.68868, 0.29213],
[0.67925, 0.2397],
[0.66038, 0.23221],
[0.66038, 0.19101],
[0.68868, 0.12734],
[0.70283, 0.06367],
[0.68868, 0.011236],
[0.6934, -0.044944],
[0.70755, -0.082397],
[0.67925, -0.12734],
[0.69811, -0.17978],
[0.70755, -0.20599],
[0.74528, -0.26217],
[0.7783, -0.34831],
[0.78302, -0.45318],
[0.78302, -0.53933],
[0.77358, -0.63296],
[0.76415, -0.73034],
[0.7783, -0.82397],
[0.78302, -0.91011],
[0.79245, -0.98876],
[0.54245, -0.99625],
[0.56604, -0.94007],
[0.59906, -0.89139],
[0.62736, -0.85768],
[0.64151, -0.79026],
[0.64623, -0.71536],
[0.67925, -0.65543],
[0.70755, -0.59925],
[0.66981, -0.48689],
[0.71226, -0.47566],
[0.72642, -0.43071],
[0.74528, -0.40075],
[0.72642, -0.35206],
[0.69811, -0.31461],
[0.66038, -0.26592],
[0.69811, -0.1985],
[0, 0],
[0.66981, -0.47566],
[0.61321, -0.48315],
[0.52358, -0.46067],
[0.47642, -0.41199],
[0.4434, -0.35581],
[0.40566, -0.27341],
[0.38208, -0.22097],
[0.33019, -0.12734],
[0.29245, -0.067416],
[0.25472, -0.011236],
[0.33491, 0.029963],
[0.38208, 0.06367],
[0.42925, 0.1236],
[0.48113, 0.20974],
[0.50472, 0.30337],
[0.50943, 0.34831],
[0.5, 0.38951],
[0.46226, 0.40824],
[0.38679, 0.42322],
[0.38679, 0.40075],
[0.44811, 0.39326],
[0.5, 0.36704],
[0.51415, 0.41199],
[0.51887, 0.48315],
[0.5, 0.55805],
[0.46226, 0.61798],
[0.38208, 0.67416],
[0.25943, 0.67041],
[0.18396, 0.63296],
[0.14151, 0.58801],
[0.089623, 0.53933],
[0.009434, 0.48315],
[0.066038, 0.48315],
[0.21698, 0.44569],
[0.21226, 0.42322],
[0.084906, 0.46816],
[0.023585, 0.46067],
[0.009434, 0.46816],
[-0.014151, 0.45693],
[-0.066038, 0.4382],
[-0.10849, 0.41948],
[-0.14151, 0.35581],
[-0.14623, 0.29588],
[-0.15094, 0.22472],
[-0.11321, 0.1573],
[-0.037736, 0.078652],
[0.056604, 0.014981],
[0.14151, -0.026217],
[0.25, -0.011236],
[0.23113, -0.074906],
[0.19811, -0.1236],
[0.16981, -0.18727],
[0.15566, -0.23221],
[0, 0],
[-0.15566, 0.21723],
[-0.15094, 0.14607],
[-0.16981, 0.089888],
[-0.14151, 0.033708],
[-0.1934, 0.0037453],
[-0.16038, -0.05618],
[-0.17453, -0.093633],
[-0.2217, -0.12734],
[-0.21698, -0.18727],
[-0.21698, -0.2397],
[-0.26887, -0.26592],
[-0.31132, -0.31835],
[-0.33019, -0.34831],
[-0.36792, -0.31835],
[-0.40094, -0.26966],
[-0.42453, -0.28464],
[-0.42453, -0.34082],
[-0.48585, -0.33708],
[-0.50943, -0.28464],
[-0.50943, -0.22846],
[-0.48113, -0.17228],
[-0.49528, -0.10487],
[-0.57547, -0.14232],
[-0.66981, -0.15356],
[-0.75, -0.17228],
[-0.6934, -0.23596],
[-0.63679, -0.32584],
[-0.60377, -0.41573],
[-0.57547, -0.51311],
[-0.55189, -0.61798],
[-0.54717, -0.73034],
[-0.58962, -0.77528],
[-0.59434, -0.81648],
[-0.58491, -0.8764],
[-0.59434, -0.97004],
[-0.60849, -0.99251],
[-0.59434, -0.91386],
[-0.53302, -1.0037],
[0.53774, -0.98876],
[0, 0],
[-0.33491, -0.34457],
[-0.31604, -0.40824],
[-0.26415, -0.47191],
[-0.17925, -0.53933],
[-0.089623, -0.58427],
[-0.004717, -0.62547],
[0.066038, -0.67416],
[0.13679, -0.71161],
[0.17925, -0.65543],
[0.23113, -0.59551],
[0.2783, -0.53933],
[0.33962, -0.46442],
[0.38679, -0.41573],
[0.40094, -0.32584],
[0.38679, -0.22846],
[0, 0],
[0.31132, 0.13483],
[0.26887, 0.10112],
[0.21226, 0.082397],
[0.14623, 0.097378],
[0.099057, 0.13483],
[0.061321, 0.17228],
[0.04717, 0.19101],
[0.099057, 0.15356],
[0.12736, 0.1236],
[0.17925, 0.10861],
[0.24057, 0.10861],
[0.30189, 0.13858],
[0.27358, 0.14232],
[0.23113, 0.15356],
[0.19811, 0.1573],
[0.16509, 0.16854],
[0.12736, 0.17603],
[0.080189, 0.18727],
[0.051887, 0.19101],
[0.12264, 0.19101],
[0.16509, 0.18352],
[0.18868, 0.17978],
[0.20755, 0.17228],
[0.23585, 0.16854],
[0.26887, 0.1573],
[0.3066, 0.13858],
[0, 0],
[0.33019, 0.34831],
[0.38679, 0.33333],
[0.42453, 0.32584],
[0.46226, 0.34457],
[0.41981, 0.36704],
[0.37736, 0.37828],
[0.33019, 0.35581],
[0, 0],
[0.1934, 0.38202],
[0.15566, 0.41573],
[0.10377, 0.4382],
[0.066038, 0.42697],
[0.042453, 0.41948],
[0.056604, 0.40449],
[0.09434, 0.39326],
[0.12736, 0.38577],
[0.16038, 0.38951],
[0.18868, 0.38951],
[0, 0],
[0.3066, 0.3633],
[0.29245, 0.32959],
[0.29245, 0.30337],
[0.29245, 0.26966],
[0.31132, 0.24719],
[0.31132, 0.22472],
[0.29717, 0.21348],
[0.27358, 0.21723],
[0.25472, 0.20974],
[0.21698, 0.22846],
[0.19811, 0.24345],
[0.16981, 0.2397],
[0.16509, 0.27341],
[0.19811, 0.28839],
[0.20755, 0.31461],
[0, 0],
[-0.61321, -0.99625],
[-0.92925, -0.99625]
];
var myphoto = document.getElementById("canvas121");
var pict = myphoto.getContext("2d");
pict.beginPath();
for (var i = 1; i < over.length; i++) {
  if (over[i][0] == 0 && over[i][1] == 0) {
    i++;
    pict.moveTo(150 * (1.5 - over[i][0]), 150 * (1.5 - over[i][1]));      //статическое решение
  } 
  else pict.lineTo(150 * (1.5 - over[i][0]), 150 * (1.5 - over[i][1]));
}
pict.closePath();
pict.stroke();


var myphoto = document.getElementById("canvas122");
var pict = myphoto.getContext("2d");
var interval = 90;
function drawLine(x0, y0, x, y) {
    var amount = 0;
    function time() {
      amount += 0.1;
      pict.moveTo(x0, y0);
      pict.lineTo(x0 + (x - x0) * amount, y0 + (y - y0) * amount);
      if (amount > (0.1 * interval) / 100) pict.stroke();
      if (amount >= 1) clearInterval(timer);
    }
    var timer = setInterval(time, interval);
    amount = 0;
    interval += 1;
}
pict.beginPath();
for (var i = 1; i < over.length; i++) {
  if (over[i][0] == 0 && over[i][1] == 0) {
    i++;
    pict.moveTo(150 * (1.5 - over[i][0]), 150 * (1.5 - over[i][1]));
  } 
  else {
      setTimeout(func, interval);
      function func() {
        drawLine(
          150 * (1.5 - over[i - 1][0]),
          150 * (1.5 - over[i - 1][1]),
          150 * (1.5 - over[i][0]),
          150 * (1.5 - over[i][1])
        );
      }
      func();
    }
}
pict.closePath();
pict.stroke();
